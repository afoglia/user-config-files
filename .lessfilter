#!/bin/sh

# TODO: Try to be smarter and for languages unsupported by one tool, try to use
# a later one.

# Highlight is nearly as fast as source-highlight, and comes with much better
# styles.

if type highlight > /dev/null 2>&1 ; then
  highlight -O xterm256 --style clarity "$1"
  exit $?
fi

# Next try pygmentize because it's so much simpler to customize for dark
# backgrounds.

if type pygmentize > /dev/null 2>&1 ; then
  pygmentize -O style=paraiso-dark  "$1"
  exit $?
fi

# Source-highlight is much faster, but pygmentize is much, much easier to
# customize. source-highlight usage is lacking online. Shame, since it's so
# much faster. I'll try it customizing it again another time.

STYLE="${HOME}/.source-highlight.d/esc-solarized.style"
OUTLANG="esc-solarized"
#"${HOME}/.source-highlight.d/esc-solarized.outlang"

case "$1" in
  *.diff|*.patch)
    colordiff < "$1"
    ;;
  *ChangeLog|*changelog)
    # I think the base style is better than mine for Changelogs 
    source-highlight --failsafe -f esc --lang-def=changelog.lang \
      -i "$1" ;;
  *Makefile|*makefile) 
    source-highlight --failsafe -f esc --lang-def=makefile.lang \
      --style-file="${STYLE}" -i "$1" ;;
  *BUILD)
    source-highlight --failsafe -f esc --src-lang=py --style-file="${STYLE}" -i "$1" ;;
  *)
    # Unhandled format.
    file "$1" | grep -q text && source-highlight --data-dir "${HOME}/.source-highlight.d" --failsafe --infer-lang -f "${OUTLANG}" --style-file="${STYLE}" -i "$1"
    exit $?
esac

# No further processing by lesspipe necessary
exit 0
